{
  "config": {
    "session": {
      "maxAge": 86400000,
      "key": "EGG_SESS",
      "httpOnly": true,
      "encrypt": true,
      "logValue": true,
      "overwrite": true,
      "signed": true,
      "autoCommit": true,
      "encode": "<Function encode>",
      "decode": "<Function decode>",
      "genid": "<Function v4>"
    },
    "security": {
      "domainWhiteList": [],
      "protocolWhiteList": [],
      "defaultMiddleware": "csrf,hsts,methodnoallow,noopen,nosniff,csp,xssProtection,xframe,dta",
      "csrf": false,
      "xframe": {
        "enable": true,
        "value": "SAMEORIGIN",
        "matching": "<Function anonymous>"
      },
      "hsts": {
        "enable": false,
        "maxAge": 31536000,
        "includeSubdomains": false
      },
      "dta": {
        "enable": true,
        "matching": "<Function anonymous>"
      },
      "methodnoallow": {
        "enable": true,
        "matching": "<Function anonymous>"
      },
      "noopen": {
        "enable": true,
        "matching": "<Function anonymous>"
      },
      "nosniff": {
        "enable": true,
        "matching": "<Function anonymous>"
      },
      "referrerPolicy": {
        "enable": false,
        "value": "no-referrer-when-downgrade"
      },
      "xssProtection": {
        "enable": true,
        "value": "1; mode=block",
        "matching": "<Function anonymous>"
      },
      "csp": {
        "enable": false,
        "policy": {}
      },
      "ssrf": {
        "ipBlackList": null,
        "ipExceptionList": null,
        "checkAddress": null
      },
      "_protocolWhiteListSet": "<Set>"
    },
    "helper": {
      "shtml": {}
    },
    "jsonp": {
      "limit": 50,
      "callback": [
        "_callback",
        "callback"
      ],
      "csrf": false
    },
    "onerror": {
      "errorPageUrl": "",
      "appErrorFilter": null,
      "templatePath": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-onerror/lib/onerror_page.mustache"
    },
    "env": "local",
    "name": "midway-example",
    "keys": "<String len: 33>",
    "cookies": {},
    "proxy": false,
    "maxIpsCount": 0,
    "maxProxyCount": 0,
    "protocolHeaders": "x-forwarded-proto",
    "ipHeaders": "x-forwarded-for",
    "hostHeaders": "",
    "pkg": {
      "name": "midway-example",
      "version": "1.0.0",
      "description": "使用 midway + TypeORM 完成 数据库 CRUD，Restful 接口基础功能，应用服务基础功能",
      "private": true,
      "dependencies": {
        "@midwayjs/bootstrap": "^3.0.0",
        "@midwayjs/core": "^3.0.0",
        "@midwayjs/decorator": "^3.0.0",
        "@midwayjs/koa": "^3.3.2",
        "@midwayjs/logger": "^2.14.0",
        "@midwayjs/orm": "^3.0.0",
        "@midwayjs/redis": "^3.3.2",
        "@midwayjs/swagger": "^3.0.0",
        "@midwayjs/task": "^3.0.0",
        "@midwayjs/validate": "^3.0.0",
        "@midwayjs/web": "^3.0.0",
        "@mw-components/jaeger": "^9.0.4",
        "@mw-components/koid": "^6.0.0",
        "@prisma/client": "^3.7.0",
        "@waiting/shared-core": "^15.1.0",
        "@waiting/shared-types": "^15.1.0",
        "bignumber.js": "^9.0.2",
        "chalk": "^5.0.0",
        "egg": "^2.33.1",
        "egg-scripts": "^2.15.2",
        "joi": "^17.5.0",
        "lodash": "^4.17.21",
        "mysql2": "^2.3.3",
        "typeorm": "^0.2.41",
        "typeorm-naming-strategies": "^2.0.0"
      },
      "devDependencies": {
        "@midwayjs/cli": "^1.2.93",
        "@midwayjs/egg-ts-helper": "^1.2.1",
        "@midwayjs/luckyeye": "^1.0.3",
        "@midwayjs/mock": "^3.0.0",
        "@types/ioredis": "^4.28.10",
        "@types/jest": "^27.4.0",
        "@types/node": "17",
        "cross-env": "^7.0.3",
        "egg-mock": "^4.2.0",
        "eslint": "^7.5.0",
        "jest": "^27.4.5",
        "mwts": "^1.3.0",
        "swagger-ui-dist": "^4.1.3",
        "ts-jest": "^27.1.2",
        "ts-node": "^9.0.0",
        "typescript": "^4.5.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "scripts": {
        "online": "NODE_ENV=production pm2-runtime start ./bootstrap.js --name midway_prisma -i 1",
        "start": "egg-scripts start --title=midway_prisma --framework=@midwayjs/web",
        "stop": "egg-scripts stop --title=midway_prisma",
        "start_build": "npm run build && cross-env NODE_ENV=development midway-bin dev",
        "dev": "cross-env ets && cross-env NODE_ENV=local  midway-bin dev --ts",
        "test": "midway-bin test --ts",
        "cov": "midway-bin cov --ts",
        "lint": "mwts check",
        "lint:fix": "mwts fix",
        "ci": "npm run cov",
        "build": "midway-bin build -c",
        "check": "luckyeye",
        "clear": "rm -rf ./logs ./run ./dist"
      },
      "midway-bin-clean": [
        ".vscode/.tsbuildinfo",
        "dist"
      ],
      "midway-luckyeye": {
        "packages": [
          "midway_v2"
        ]
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/ddzyan/midway-prisma.git"
      },
      "author": "dingdongzhao",
      "license": "MIT"
    },
    "baseDir": "/Users/didi/Documents/work-space/my-github/midway-example/src",
    "HOME": "/Users/didi",
    "rundir": "/Users/didi/Documents/work-space/my-github/midway-example/run",
    "dump": {
      "ignore": "<Set>"
    },
    "confusedConfigurations": {
      "bodyparser": "bodyParser",
      "notFound": "notfound",
      "sitefile": "siteFile",
      "middlewares": "middleware",
      "httpClient": "httpclient"
    },
    "notfound": {
      "pageUrl": ""
    },
    "siteFile": {
      "/favicon.ico": "<Buffer len: 6463>"
    },
    "bodyParser": {
      "enable": true,
      "encoding": "utf8",
      "formLimit": "1mb",
      "jsonLimit": "1mb",
      "textLimit": "1mb",
      "strict": true,
      "queryString": {
        "arrayLimit": 100,
        "depth": 5,
        "parameterLimit": 1000
      },
      "returnRawBody": true
    },
    "logger": {
      "dir": "/Users/didi/Documents/work-space/my-github/midway-example/logs/midway-example",
      "encoding": "utf8",
      "env": "local",
      "level": "INFO",
      "consoleLevel": "INFO",
      "disableConsoleAfterReady": false,
      "outputJSON": false,
      "buffer": true,
      "appLogName": "midway-example-web.log",
      "coreLogName": "egg-web.log",
      "agentLogName": "egg-agent.log",
      "errorLogName": "common-error.log",
      "coreLogger": {
        "consoleLevel": "WARN"
      },
      "allowDebugAtProd": false,
      "enablePerformanceTimer": false
    },
    "httpclient": {
      "enableDNSCache": false,
      "dnsCacheLookupInterval": 10000,
      "dnsCacheMaxLength": 1000,
      "request": {
        "timeout": 5000
      },
      "httpAgent": {
        "keepAlive": true,
        "freeSocketTimeout": 4000,
        "maxSockets": 9007199254740991,
        "maxFreeSockets": 256
      },
      "httpsAgent": {
        "keepAlive": true,
        "freeSocketTimeout": 4000,
        "maxSockets": 9007199254740991,
        "maxFreeSockets": 256
      }
    },
    "meta": {
      "enable": true,
      "logging": false
    },
    "coreMiddleware": [],
    "workerStartTimeout": 600000,
    "serverTimeout": null,
    "cluster": {
      "listen": {
        "path": "",
        "port": 7001,
        "hostname": ""
      }
    },
    "clusterClient": {
      "maxWaitTime": 60000,
      "responseTimeout": 60000
    },
    "onClientError": null,
    "midwayLogger": {
      "clients": {
        "appLogger": {
          "fileLogName": "midway-web.log",
          "aliasName": "logger"
        },
        "agentLogger": {
          "fileLogName": "midway-agent.log"
        },
        "coreLogger": {
          "fileLogName": "midway-core.log"
        },
        "taskLog": {
          "fileLogName": "midway-task.log",
          "disableConsole": true
        }
      },
      "default": {
        "dir": "/Users/didi/Documents/work-space/my-github/midway-example/logs/midway-example",
        "level": "info",
        "consoleLevel": "info",
        "auditFileDir": ".audit"
      }
    },
    "egg": {
      "dumpConfig": true,
      "contextLoggerFormat": "<Function contextLoggerFormat>",
      "plugins": {
        "egg-mock": {
          "enable": true,
          "package": "egg-mock",
          "name": "egg-mock",
          "dependencies": [],
          "optionalDependencies": [],
          "env": []
        }
      }
    },
    "pluginOverwrite": false,
    "alinode": {
      "logdir": "/tmp",
      "error_log": [
        "/Users/didi/Documents/work-space/my-github/midway-example/logs/midway-example/common-error.log",
        "/Users/didi/Documents/work-space/my-github/midway-example/logs/stderr.log"
      ],
      "packages": [
        "/Users/didi/Documents/work-space/my-github/midway-example/package.json"
      ]
    },
    "accessLogConfig": {
      "ignore": [
        {}
      ]
    },
    "middleware": [
      "requestIdMiddleware",
      "formatMiddleware",
      "accessLogMiddleware",
      "errorHandlerMiddleware",
      "jaeger:tracerExtMiddleware"
    ],
    "midwayFeature": {
      "replaceEggLogger": true
    },
    "orm": {
      "type": "mysql",
      "namingStrategy": "<SnakeNamingStrategy>",
      "timezone": "+08:00",
      "host": "127.0.0.1",
      "port": 13306,
      "username": "root",
      "password": "<String len: 16>",
      "database": "test",
      "synchronize": false,
      "logging": [
        "error"
      ],
      "name": "default",
      "entities": [
        null,
        null,
        null
      ],
      "subscribers": []
    },
    "redis": {
      "client": {
        "port": 16379,
        "host": "127.0.0.1",
        "password": "<String len: 0>",
        "db": 0
      }
    },
    "task": {
      "redis": {
        "port": 16379,
        "host": "127.0.0.1",
        "password": "<String len: 0>"
      },
      "prefix": "midway-task",
      "defaultJobOptions": {
        "repeat": {
          "tz": "Asia/Shanghai"
        }
      },
      "concurrency": 1,
      "contextLoggerApplyLogger": "taskLog",
      "contextLoggerFormat": "<Function contextLoggerFormat>"
    },
    "coreMiddlewares": [
      "meta",
      "siteFile",
      "notfound",
      "bodyParser",
      "overrideMethod",
      "session",
      "clusterAppMock",
      "securities"
    ],
    "appMiddlewares": [
      "requestIdMiddleware",
      "formatMiddleware",
      "accessLogMiddleware",
      "errorHandlerMiddleware"
    ],
    "appMiddleware": [],
    "debug": {
      "recordConfigMergeOrder": true
    },
    "tracer": {
      "whiteList": [
        "/favicon.ico",
        "/favicon.png"
      ],
      "reqThrottleMsForPriority": 500,
      "enableMiddleWare": true,
      "enableCatchError": true,
      "logginInputQuery": true,
      "loggingOutputBody": true,
      "loggingReqHeaders": [
        "authorization",
        "host",
        "user-agent"
      ],
      "processCustomFailure": "<AsyncFunction processCustomFailure>",
      "tracingConfig": {
        "sampler": {
          "type": "probabilistic",
          "param": 1
        },
        "reporter": {
          "agentHost": "127.0.0.1"
        }
      }
    },
    "koid": {
      "dataCenter": 8,
      "worker": 6,
      "epoch": 0,
      "noWait": false
    },
    "swagger": {
      "title": "My Project",
      "description": "This is a swagger-ui for midwayjs project",
      "version": "1.0.0",
      "swaggerPath": "/swagger-ui"
    },
    "i18n": {
      "defaultLocale": "en_US",
      "localeTable": {
        "en_US": {
          "validate": {
            "alternatives.all": "{{#label}} does not match all of the required types",
            "alternatives.any": "{{#label}} does not match any of the allowed types",
            "alternatives.match": "{{#label}} does not match any of the allowed types",
            "alternatives.one": "{{#label}} matches more than one allowed type",
            "alternatives.types": "{{#label}} must be one of {{#types}}",
            "any.custom": "{{#label}} failed custom validation because {{#error.message}}",
            "any.default": "{{#label}} threw an error when running default method",
            "any.failover": "{{#label}} threw an error when running failover method",
            "any.invalid": "{{#label}} contains an invalid value",
            "any.only": "{{#label}} must be {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}",
            "any.ref": "{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}",
            "any.required": "{{#label}} is required",
            "any.unknown": "{{#label}} is not allowed",
            "array.base": "{{#label}} must be an array",
            "array.excludes": "{{#label}} contains an excluded value",
            "array.hasKnown": "{{#label}} does not contain at least one required match for type {:#patternLabel}",
            "array.hasUnknown": "{{#label}} does not contain at least one required match",
            "array.includes": "{{#label}} does not match any of the allowed types",
            "array.includesRequiredBoth": "{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)",
            "array.includesRequiredKnowns": "{{#label}} does not contain {{#knownMisses}}",
            "array.includesRequiredUnknowns": "{{#label}} does not contain {{#unknownMisses}} required value(s)",
            "array.length": "{{#label}} must contain {{#limit}} items",
            "array.max": "{{#label}} must contain less than or equal to {{#limit}} items",
            "array.min": "{{#label}} must contain at least {{#limit}} items",
            "array.orderedLength": "{{#label}} must contain at most {{#limit}} items",
            "array.sort": "{{#label}} must be sorted in {#order} order by {{#by}}",
            "array.sort.mismatching": "{{#label}} cannot be sorted due to mismatching types",
            "array.sort.unsupported": "{{#label}} cannot be sorted due to unsupported type {#type}",
            "array.sparse": "{{#label}} must not be a sparse array item",
            "array.unique": "{{#label}} contains a duplicate value",
            "binary.base": "{{#label}} must be a buffer or a string",
            "binary.length": "{{#label}} must be {{#limit}} bytes",
            "binary.max": "{{#label}} must be less than or equal to {{#limit}} bytes",
            "binary.min": "{{#label}} must be at least {{#limit}} bytes",
            "boolean.base": "{{#label}} must be a boolean",
            "date.base": "{{#label}} must be a valid date",
            "date.format": "{{#label}} must be in {msg(\"date.format.\" + #format) || #format} format",
            "date.greater": "{{#label}} must be greater than {{:#limit}}",
            "date.less": "{{#label}} must be less than {{:#limit}}",
            "date.max": "{{#label}} must be less than or equal to {{:#limit}}",
            "date.min": "{{#label}} must be greater than or equal to {{:#limit}}",
            "date.format.iso": "ISO 8601 date",
            "date.format.javascript": "timestamp or number of milliseconds",
            "date.format.unix": "timestamp or number of seconds",
            "function.arity": "{{#label}} must have an arity of {{#n}}",
            "function.class": "{{#label}} must be a class",
            "function.maxArity": "{{#label}} must have an arity lesser or equal to {{#n}}",
            "function.minArity": "{{#label}} must have an arity greater or equal to {{#n}}",
            "object.and": "{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}",
            "object.assert": "{{#label}} is invalid because {if(#subject.key, `\"` + #subject.key + `\" failed to ` + (#message || \"pass the assertion test\"), #message || \"the assertion failed\")}",
            "object.base": "{{#label}} must be of type {{#type}}",
            "object.instance": "{{#label}} must be an instance of {{:#type}}",
            "object.length": "{{#label}} must have {{#limit}} key{if(#limit == 1, \"\", \"s\")}",
            "object.max": "{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, \"\", \"s\")}",
            "object.min": "{{#label}} must have at least {{#limit}} key{if(#limit == 1, \"\", \"s\")}",
            "object.missing": "{{#label}} must contain at least one of {{#peersWithLabels}}",
            "object.nand": "{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}",
            "object.oxor": "{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}",
            "object.pattern.match": "{{#label}} keys failed to match pattern requirements",
            "object.refType": "{{#label}} must be a Joi reference",
            "object.regex": "{{#label}} must be a RegExp object",
            "object.rename.multiple": "{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}",
            "object.rename.override": "{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists",
            "object.schema": "{{#label}} must be a Joi schema of {{#type}} type",
            "object.unknown": "{{#label}} is not allowed",
            "object.with": "{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}",
            "object.without": "{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}",
            "object.xor": "{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}",
            "number.base": "{{#label}} must be a number",
            "number.greater": "{{#label}} must be greater than {{#limit}}",
            "number.infinity": "{{#label}} cannot be infinity",
            "number.integer": "{{#label}} must be an integer",
            "number.less": "{{#label}} must be less than {{#limit}}",
            "number.max": "{{#label}} must be less than or equal to {{#limit}}",
            "number.min": "{{#label}} must be greater than or equal to {{#limit}}",
            "number.multiple": "{{#label}} must be a multiple of {{#multiple}}",
            "number.negative": "{{#label}} must be a negative number",
            "number.port": "{{#label}} must be a valid port",
            "number.positive": "{{#label}} must be a positive number",
            "number.precision": "{{#label}} must have no more than {{#limit}} decimal places",
            "number.unsafe": "{{#label}} must be a safe number",
            "string.alphanum": "{{#label}} must only contain alpha-numeric characters",
            "string.base": "{{#label}} must be a string",
            "string.base64": "{{#label}} must be a valid base64 string",
            "string.creditCard": "{{#label}} must be a credit card",
            "string.dataUri": "{{#label}} must be a valid dataUri string",
            "string.domain": "{{#label}} must contain a valid domain name",
            "string.email": "{{#label}} must be a valid email",
            "string.empty": "{{#label}} is not allowed to be empty",
            "string.guid": "{{#label}} must be a valid GUID",
            "string.hex": "{{#label}} must only contain hexadecimal characters",
            "string.hexAlign": "{{#label}} hex decoded representation must be byte aligned",
            "string.hostname": "{{#label}} must be a valid hostname",
            "string.ip": "{{#label}} must be a valid ip address with a {{#cidr}} CIDR",
            "string.ipVersion": "{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR",
            "string.isoDate": "{{#label}} must be in iso format",
            "string.isoDuration": "{{#label}} must be a valid ISO 8601 duration",
            "string.length": "{{#label}} length must be {{#limit}} characters long",
            "string.lowercase": "{{#label}} must only contain lowercase characters",
            "string.max": "{{#label}} length must be less than or equal to {{#limit}} characters long",
            "string.min": "{{#label}} length must be at least {{#limit}} characters long",
            "string.normalize": "{{#label}} must be unicode normalized in the {{#form}} form",
            "string.token": "{{#label}} must only contain alpha-numeric and underscore characters",
            "string.pattern.base": "{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}",
            "string.pattern.name": "{{#label}} with value {:[.]} fails to match the {{#name}} pattern",
            "string.pattern.invert.base": "{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}",
            "string.pattern.invert.name": "{{#label}} with value {:[.]} matches the inverted {{#name}} pattern",
            "string.trim": "{{#label}} must not have leading or trailing whitespace",
            "string.uri": "{{#label}} must be a valid uri",
            "string.uriCustomScheme": "{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern",
            "string.uriRelativeOnly": "{{#label}} must be a valid relative uri",
            "string.uppercase": "{{#label}} must only contain uppercase characters",
            "symbol.base": "{{#label}} must be a symbol",
            "symbol.map": "{{#label}} must be one of {{#map}}"
          }
        },
        "zh_CN": {
          "validate": {
            "alternatives.all": "{{#label}} 不能匹配上所以可选项",
            "alternatives.any": "{{#label}} 不能匹配上任何可选项",
            "alternatives.match": "{{#label}} 不能匹配上任何可选项",
            "alternatives.one": "{{#label}} 匹配超过一个可选项",
            "alternatives.types": "{{#label}} 必须是 {{#types}}",
            "any.custom": "{{#label}} 自定义校验失败，原因为 {{#error.message}}",
            "any.default": "{{#label}} 运行默认函数时出错",
            "any.failover": "{{#label}} 运行 failover 函数时出错",
            "any.invalid": "{{#label}} 不是可选值",
            "any.only": "{{#label}} 必须是 {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}",
            "any.ref": "{{#label}} {{#arg}} 引用 {{:#ref}} 其中 {{#reason}}",
            "any.required": "{{#label}} 是必须的",
            "any.unknown": "{{#label}} 不被允许",
            "array.base": "{{#label}} 必须是数组",
            "array.excludes": "{{#label}} 包含排除的值",
            "array.hasKnown": "{{#label}} 不包含至少一个类型为 {:#patternLabel} 的必选项",
            "array.hasUnknown": "{{#label}} 不包含至少一个必选项",
            "array.includes": "{{#label}} 不能匹配上任何可选项",
            "array.includesRequiredBoth": "{{#label}} 不包含 {{#knownMisses}} 及 {{#unknownMisses}} 个必选项",
            "array.includesRequiredKnowns": "{{#label}} 不包含 {{#knownMisses}} 等必选项",
            "array.includesRequiredUnknowns": "{{#label}} 不包含 {{#unknownMisses}} 个必选项",
            "array.length": "{{#label}} 必须正好包含 {{#limit}} 个成员",
            "array.max": "{{#label}} 必须最多包含 {{#limit}} 个成员",
            "array.min": "{{#label}} 必须至少包含 {{#limit}} 个成员",
            "array.orderedLength": "{{#label}} 必须至少包含 {{#limit}} 个成员",
            "array.sort": "{{#label}} 必须按 {#order} 顺序按 {{#by}} 排序",
            "array.sort.mismatching": "{{#label}} 由于类型不匹配而无法排序",
            "array.sort.unsupported": "{{#label}} 类型 {#type} 不支持排序",
            "array.sparse": "{{#label}} 不能包含未定义成员",
            "array.unique": "{{#label}} 是重复的成员",
            "binary.base": "{{#label}} 必须是一段内容",
            "binary.length": "{{#label}} 必须至少包含 {{#limit}} 个字节",
            "binary.max": "{{#label}} 必须最多包含 {{#limit}} 个字节",
            "binary.min": "{{#label}} 必须至少包含 {{#limit}} 个字节",
            "boolean.base": "{{#label}} 必须是 bool 值",
            "date.base": "{{#label}} 必须是毫秒数或者有效的时间字符串",
            "date.format": "{{#label}} 必须是以下格式的字符串 {msg(\"date.format.\" + #format) || #format}",
            "date.greater": "{{#label}} 必须晚于 {{:#limit}}",
            "date.less": "{{#label}} 必须早于 {{:#limit}}",
            "date.max": "{{#label}} 必须早于 {{:#limit}}",
            "date.min": "{{#label}} 必须晚于 {{:#limit}}",
            "date.format.iso": "必须是有效的\"ISO 8601\"格式的时间",
            "date.format.javascript": "必须是有效的时间戳或者毫秒数",
            "date.format.unix": "必须是有效的时间戳或者秒数",
            "function.arity": "{{#label}} 必须正好拥有 {{#n}} 个参数",
            "function.class": "{{#label}} 必须是对象类",
            "function.maxArity": "{{#label}} 必须最多拥有 {{#n}} 个参数",
            "function.minArity": "{{#label}} 必须至少拥有 {{#n}} 个参数",
            "object.and": "{{#label}} 当前 {{#presentWithLabels}} 需要有对应的 {{#missingWithLabels}}",
            "object.assert": "{{#label}} 无效，原因为 {if(#subject.key, `\"` + #subject.key + `\" failed to ` + (#message || \"pass the assertion test\"), #message || \"the assertion failed\")}",
            "object.base": "{{#label}} 必须是一个对象 {{#type}}",
            "object.instance": "{{#label}} 必须是一个 {{:#type}} 的实例",
            "object.length": "{{#label}} 必须正好包含 {{#limit}} 个子对象",
            "object.max": "{{#label}} 必须最多包含 {{#limit}} 个子对象",
            "object.min": "{{#label}} 必须至少包含 {{#limit}} 个子对象",
            "object.missing": "{{#label}} 没有对应的 {{#peersWithLabels}}",
            "object.nand": "{{:#mainWithLabel}} 不得与 {{#peersWithLabels}} 同时存在",
            "object.oxor": "{{#label}} 和 {{#peerWithLabels}} 有冲突",
            "object.pattern.match": "{{#label}} 键匹配失败",
            "object.refType": "{{#label}} 必须是 Joi 引用",
            "object.regex": "{{#label}} 必须是正则对象",
            "object.rename.multiple": "{{#label}} 无法重命名 {{:#from}} 因为多次重命名被禁用并且另一个键已经重命名为 {{:#to}}",
            "object.rename.override": "{{#label}} 无法重命名 {{:#from}} 因为覆盖被禁用并且目标 {{:#to}} 存在",
            "object.schema": "{{#label}} 必须是 {{#type}} 类型的 Joi Schema",
            "object.unknown": "{{#label}} 不被允许",
            "object.with": "{{:#mainWithLabel}} 缺少必需的对等方 {{:#peerWithLabel}}",
            "object.without": "{{:#mainWithLabel}} 与禁止的节点冲突 {{:#peerWithLabel}}",
            "object.xor": "{{#label}} 包含独占对等体之间的冲突 {{#peersWithLabels}}",
            "number.base": "{{#label}} 必须是数值",
            "number.greater": "{{#label}} 必须大于 {{#limit}}",
            "number.infinity": "{{#label}} 不能是无穷大",
            "number.integer": "{{#label}} 必须是整数",
            "number.less": "{{#label}} 必须小于 {{#limit}}",
            "number.max": "{{#label}} 必须小于或等于 {{#limit}}",
            "number.min": "{{#label}} 必须大于或等于 {{#limit}}",
            "number.multiple": "{{#label}} 必须是 {{#multiple}} 的倍数",
            "number.negative": "{{#label}} 必须是负数",
            "number.port": "{{#label}} 必须是有效的端口号",
            "number.positive": "{{#label}} 必须是正数",
            "number.precision": "{{#label}} 必须有 {{#limit}} 位小数",
            "number.unsafe": "{{#label}} 必须是安全号码",
            "string.alphanum": "{{#label}} must only contain alpha-numeric characters",
            "string.base": "{{#label}} 必须是字符串",
            "string.base64": "{{#label}} 必须是有效的 base64 字符串",
            "string.creditCard": "{{#label}} 必须是有效的信用卡号",
            "string.dataUri": "{{#label}} 必须是有效的 dataUri 字符串",
            "string.domain": "{{#label}} 必须包含有效的域名",
            "string.email": "{{#label}} 必须是有效的电子邮件",
            "string.empty": "{{#label}} 不允许为空",
            "string.guid": "{{#label}} 必须是有效的 GUID",
            "string.hex": "{{#label}} 只能包含十六进制字符",
            "string.hexAlign": "{{#label}} 十六进制解码表示必须字节对齐",
            "string.hostname": "{{#label}} 必须是有效的主机名",
            "string.ip": "{{#label}} 必须是具有 {{#cidr}} CIDR 的有效 IP 地址",
            "string.ipVersion": "{{#label}} 必须是以下版本之一的有效 IP 地址 {{#version}} 和 {{#cidr}} CIDR",
            "string.isoDate": "{{#label}} 必须是 iso 格式",
            "string.isoDuration": "{{#label}} 必须是有效的 ISO 8601 持续时间",
            "string.length": "{{#label}} 长度必须为 {{#limit}} 个字符长",
            "string.lowercase": "{{#label}} 只能包含小写字符",
            "string.max": "{{#label}} 长度必须小于或等于 {{#limit}} 个字符长",
            "string.min": "{{#label}} 长度必须至少为 {{#limit}} 个字符长",
            "string.normalize": "{{#label}} 必须以 {{#form}} 形式进行 unicode 规范化",
            "string.token": "{{#label}} 只能包含字母数字和下划线字符",
            "string.pattern.base": "{{#label}} 的值为 {:[.]} 未能匹配所需的模式：{{#regex}}",
            "string.pattern.name": "{{#label}} 值为 {:[.]} 未能匹配 {{#name}} 模式",
            "string.pattern.invert.base": "{{#label}} 与值 {:[.]} 匹配反转模式：{{#regex}}",
            "string.pattern.invert.name": "{{#label}} 与值 {:[.]} 匹配倒置的 {{#name}} 模式",
            "string.trim": "{{#label}} 不得前后空格",
            "string.uri": "{{#label}} 必须是有效的 uri",
            "string.uriCustomScheme": "{{#label}} 必须是有效的 uri，其方案与 {{#scheme}} 模式匹配",
            "string.uriRelativeOnly": "{{#label}} 必须是有效的相对 uri",
            "string.uppercase": "{{#label}} 只能包含大写字符",
            "symbol.base": "{{#label}} 必须是符号",
            "symbol.map": "{{#label}} 必须是 {{#map}} 之一"
          }
        }
      },
      "fallbacks": {},
      "writeCookie": true,
      "resolver": {
        "queryField": "locale",
        "cookieField": {
          "fieldName": "locale",
          "cookieDomain": "",
          "cookieMaxAge": 31557600000
        }
      }
    },
    "validate": {
      "validationOptions": {},
      "errorStatus": 422
    }
  },
  "plugins": {
    "onerror": {
      "enable": true,
      "package": "egg-onerror",
      "name": "onerror",
      "dependencies": [],
      "optionalDependencies": [
        "jsonp"
      ],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-onerror",
      "version": "2.1.0"
    },
    "session": {
      "enable": true,
      "package": "egg-session",
      "name": "session",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-session",
      "version": "3.3.0"
    },
    "i18n": {
      "enable": false,
      "package": "egg-i18n",
      "name": "i18n",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-i18n",
      "version": "2.1.1"
    },
    "watcher": {
      "enable": false,
      "package": "egg-watcher",
      "name": "watcher",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-watcher",
      "version": "3.1.1"
    },
    "multipart": {
      "enable": false,
      "package": "egg-multipart",
      "name": "multipart",
      "dependencies": [],
      "optionalDependencies": [
        "schedule"
      ],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-multipart",
      "version": "2.13.1"
    },
    "security": {
      "enable": true,
      "package": "egg-security",
      "name": "security",
      "dependencies": [],
      "optionalDependencies": [
        "session"
      ],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-security",
      "version": "2.9.0"
    },
    "development": {
      "enable": false,
      "package": "egg-development",
      "name": "development",
      "dependencies": [
        "watcher"
      ],
      "optionalDependencies": [],
      "env": [
        "local"
      ],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-development",
      "version": "2.7.0"
    },
    "logrotator": {
      "enable": false,
      "package": "egg-logrotator",
      "name": "logrotator",
      "dependencies": [
        "schedule"
      ],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/src/config/plugin.ts",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-logrotator",
      "version": "3.1.0"
    },
    "schedule": {
      "enable": false,
      "package": "egg-schedule",
      "name": "schedule",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-schedule",
      "version": "3.6.6"
    },
    "static": {
      "enable": false,
      "package": "egg-static",
      "name": "static",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/src/config/plugin.ts",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-static",
      "version": "2.2.0"
    },
    "jsonp": {
      "enable": true,
      "package": "egg-jsonp",
      "name": "jsonp",
      "dependencies": [],
      "optionalDependencies": [
        "security"
      ],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-jsonp",
      "version": "2.0.0"
    },
    "view": {
      "enable": false,
      "package": "egg-view",
      "name": "view",
      "dependencies": [],
      "optionalDependencies": [],
      "env": [],
      "from": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/@midwayjs/web/config/plugin.js",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-view",
      "version": "2.1.3"
    },
    "egg-mock": {
      "enable": true,
      "package": "egg-mock",
      "name": "egg-mock",
      "dependencies": "~config~egg~plugins~egg-mock~dependencies",
      "optionalDependencies": "~config~egg~plugins~egg-mock~optionalDependencies",
      "env": "~config~egg~plugins~egg-mock~env",
      "path": "/Users/didi/Documents/work-space/my-github/midway-example/node_modules/egg-mock",
      "version": "4.2.0"
    }
  }
}